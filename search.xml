<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>My First Blog: 如何从零创建专属于你的博客？</title>
    <url>/2024/07/20/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/</url>
    <content><![CDATA[<p>第一篇主要写建立博客的方法。目前主页还是毛坯房的状态，以后会边写内容边做优化，本篇内容也会持续更新。</p>
<span id="more"></span>

<h1 id="Intro"><a href="#Intro" class="headerlink" title="Intro"></a>Intro</h1><p>20240719：这是一篇测试博客。当整体优化完成后，将在此处复盘流程经验。</p>
<p>20240722：热烈庆祝编译器配置完成，可以开始写博客了。目前整体还是毛坯房，以后会边写内容边做优化，</p>
<p><img src="/../images/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/images.png" alt="Corn"></p>
<center>手持赫鲁晓夫的玉米</center>

<p>​	本博客使用Github托管源码，基于Hexo框架搭建，环境Javascript，网页主题Next。</p>
<ul>
<li>附：个人喜欢的博客范例<ul>
<li><a href="https://liam.page/archives/">https://liam.page/archives/</a></li>
</ul>
</li>
</ul>
<h1 id="Step-I-Github与Git"><a href="#Step-I-Github与Git" class="headerlink" title="Step I Github与Git"></a>Step I Github与Git</h1><p>​	基础材料：稳定的VPN、Github账号一枚</p>
<ul>
<li><p>安装Git：<a href="https://git-scm.com/">https://git-scm.com/</a> 建议安装到D盘。</p>
<ul>
<li>勾选：Git from the command line and also from 3rd-part software</li>
<li>下载完成后打开Git Bash，输入<code>git</code>回车</li>
</ul>
</li>
<li><p>将Git与Github绑定：使用SSH公钥</p>
<ul>
<li><p>在D盘新建一个文件夹，命名为git codelife，在此目录下创建一个文件，命名为text。</p>
</li>
<li><p>在text文件夹下打开Git Bash输入ssh命令。随后输入<code>ssh-keygen -t rsa</code>并按下4次回车。随后输入以下命令获取SSH公钥：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd ~/.ssh </span><br><span class="line">$ ls</span><br><span class="line">$ cat id_rsa.pub</span><br></pre></td></tr></table></figure>

<p>复制公钥到Github，并Add new ssh key。在Git Bash中输入<code>ssh -T [git@github.com](mailto:git@github.com) </code>。在产生结果中输入yes，即可绑定成功。</p>
</li>
<li><p>注-提交文件的思路：将Github仓库clone到本地→将文件添加并commit到本地→将本地仓库内容push到Github仓库。</p>
</li>
<li><p>新建一个项目，命名为text，复制SSH。</p>
</li>
<li><p>在git codelife文件夹下打开Git Bash，输入命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@github.com:xxxxxxxxx.github.io.git</span><br></pre></td></tr></table></figure>
</li>
<li><p>此时可以在文件夹内创建一个text.txt测试文件。在此目录下进入Git Bash，输入<code>git status</code>命令查看仓库状态。输入<code>git add text.txt</code>添加到缓冲区，随后输入<code>git commit -m &quot;commit text file</code>。第一次提交会提示”Please tell me who you are”,输入以下内容即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name&quot;xxxxxxxxx&quot;</span><br><span class="line">$ git config --global user.email&quot;xxxxxxxxx@xxxxx.com&quot;</span><br></pre></td></tr></table></figure>

<p>完成后输入<code>git log</code>查看日志，再输入<code>git status</code>查看仓库状态。随后输入<code>git push origin main</code>将本地仓库提交到远程仓库。第一次上传需要登录github账号。验证成功后刷新仓库即可。</p>
</li>
</ul>
</li>
</ul>
<h1 id="Step-II-nodejs与hexo"><a href="#Step-II-nodejs与hexo" class="headerlink" title="Step II nodejs与hexo"></a>Step II nodejs与hexo</h1><ul>
<li><p>安装nodejs：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p>
</li>
<li><p>设置npm安装全局模块的路径和环境变量</p>
</li>
<li><p>安装Hexo</p>
<ul>
<li><p>首先在github中创建一个仓库，命名为“你的用户名.github.io”，注意必须是前面必须是github的用户名，否则域名无法解析。创建后设置Github Pages。</p>
</li>
<li><p>在D盘创建文件夹Blog，打开Blog运行Git Bash，输入命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<p>安装完成后，输入一下命令初始化博客</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>

<p>随后输入hexo g、输入hexo s，即可在网页中输入<a href="http://localhost:4000查看网页。">http://localhost:4000查看网页。</a></p>
</li>
<li><p>打开Blog文件夹中的主页配置文件config.yml，在文件底部输入如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github:xxxxxxxxx.github.io.git  #仓库地址</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure>

<p>回到Blog文件夹，打开Git Bash，输入以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<p>然后分别输入以下三条命令行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>到这，就可以输入xxxxxxx.github.io浏览网页啦！</p>
</li>
</ul>
</li>
</ul>
<h1 id="Step-III-域名的注册与解析"><a href="#Step-III-域名的注册与解析" class="headerlink" title="Step III 域名的注册与解析"></a>Step III 域名的注册与解析</h1><p>​	目前域名是冗长的.github.io，不利于辨识，且国内IP不使用VPN无法解析它。而目前国际主流的域名注册商如GoDaddy、Network Solutions提供的域名，也均不能在国内访问。</p>
<h2 id="域名注册"><a href="#域名注册" class="headerlink" title="域名注册"></a>域名注册</h2><p>​	不希望辛苦搭建的博客沦为境外势力，我们需要注册一个国内IP可以访问的域名。阿里云、腾讯云提供的域名不少价格低廉，可以一次买10年，但需要各种实名认证，比较麻烦。咬咬牙，注册了一个腾讯云十年域名。</p>
<h2 id="域名解析与绑定"><a href="#域名解析与绑定" class="headerlink" title="域名解析与绑定"></a>域名解析与绑定</h2><p>​	很多教程说要在cmd ping出网站的ip地址，使用ip地址记录值完成解析。但是ip地址在一段时间后有可能改变，出现网址定向失败的情况。打开腾讯云控制台，点击新手快速解析，选择CNAME记录，在目标域名处输入github page域名，点击确定即可。</p>
<p><img src="/../images/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/image-20240724225955409.png" alt="image-20240724225955409"></p>
<p>​	随后在hexo项目文件source目录下创建CNAME文件，写入新域名dcblog.site。</p>
<p>​	回到Github设置-Github Pages Custom domains填写新域名，保存并等待DNS check successful。</p>
<p>​	即刻访问新地址！</p>
<h1 id="Step-IV-Themes配置与优化"><a href="#Step-IV-Themes配置与优化" class="headerlink" title="Step IV Themes配置与优化"></a>Step IV Themes配置与优化</h1><h2 id="如何使网站被google和bing收录"><a href="#如何使网站被google和bing收录" class="headerlink" title="如何使网站被google和bing收录"></a>如何使网站被google和bing收录</h2><h3 id="生成sitemap"><a href="#生成sitemap" class="headerlink" title="生成sitemap"></a>生成sitemap</h3><p>​	首先安装sitemap生成插件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>

<p>​	在站点地图配置文件添加如下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 自动生成sitemap</span><br><span class="line">sitemap:</span><br><span class="line">	path: sitemap.xml</span><br></pre></td></tr></table></figure>

<p>​	打开Git Bash输入<code>hexo g</code>，即可在根目录的public文件夹生成sitemap.xml文件。</p>
<h3 id="HTML验证"><a href="#HTML验证" class="headerlink" title="HTML验证"></a>HTML验证</h3><p>​	选择URL prefix，填写域名。注意，域名应和站点配置文件中的URL内容一致。如果其中一个是dclee2024.github.io，另一个是dcblog.site，则无法被收录。</p>
<p><img src="/../images/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/image-20240725182911833.png" alt="image-20240725182911833"></p>
<p>​	下载HTML验证文件，存放在&#x2F;themes&#x2F;next&#x2F;source，执行hexo clean, hexo g, hexo d，稍等片刻返回谷歌网站站长验证界面点击verify，即可完成验证。</p>
<p>​	到此为止，仅仅能证明网站是你的，但google还不知道你的网站里有啥，所以我们需要提交sitemap。</p>
<h3 id="sitemap提交"><a href="#sitemap提交" class="headerlink" title="sitemap提交"></a>sitemap提交</h3><p>​	在站长界面点击sitemaps，在Add a new sitemap的输入框内填写sitemap.xml，提交即可。</p>
<p>​	<img src="/../images/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/image-20240725183932204.png" alt="image-20240725183932204"></p>
<p>​	状态显示success后，等待一段时间，尝试google搜索site:dcblog.site，验证是否成功收录。</p>
<p><img src="/../images/My-First-Blog-%E5%A6%82%E4%BD%95%E4%BB%8E%E9%9B%B6%E5%88%9B%E5%BB%BA%E4%B8%93%E5%B1%9E%E4%BA%8E%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2%EF%BC%9F/image-20240725181820577.png" alt="image-20240725181820577"></p>
<ul>
<li><p>Ref：<a href="https://suda-liu.github.io/2020/04/07/%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E4%BD%93%E9%AA%8C-Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95/">https://suda-liu.github.io/2020/04/07/%E4%B8%80%E6%AC%A1%E6%88%90%E5%8A%9F%E7%9A%84%E4%BD%93%E9%AA%8C-Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E6%94%B6%E5%BD%95/</a></p>
</li>
<li><p>部署站内搜索功能</p>
<ul>
<li>Ref：<a href="https://blog.csdn.net/aoman_hao/article/details/86713171">https://blog.csdn.net/aoman_hao/article/details/86713171</a></li>
</ul>
<p>建议trigger选择auto而非manual。</p>
</li>
</ul>
<h2 id="在主页配置留言板"><a href="#在主页配置留言板" class="headerlink" title="在主页配置留言板"></a>在主页配置留言板</h2><ul>
<li>Ref：<a href="https://blog.csdn.net/qq_43795348/article/details/105877147?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172190507916800172539647%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=172190507916800172539647&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-105877147-null-null.142%5Ev100%5Epc_search_result_base8&utm_term=hexo%E5%8D%9A%E5%AE%A2%20%E7%95%99%E8%A8%80%E6%9D%BF&spm=1018.2226.3001.4187">https://blog.csdn.net/qq_43795348/article/details/105877147?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522172190507916800172539647%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;request_id=172190507916800172539647&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-2-105877147-null-null.142^v100^pc_search_result_base8&amp;utm_term=hexo%E5%8D%9A%E5%AE%A2%20%E7%95%99%E8%A8%80%E6%9D%BF&amp;spm=1018.2226.3001.4187</a></li>
</ul>
<h2 id="使用个性化图标"><a href="#使用个性化图标" class="headerlink" title="使用个性化图标"></a>使用个性化图标</h2><ul>
<li>Ref：<a href="https://blog.csdn.net/qq_54030999/article/details/123164470">https://blog.csdn.net/qq_54030999/article/details/123164470</a></li>
</ul>
<h2 id="留坑"><a href="#留坑" class="headerlink" title="留坑"></a>留坑</h2><ul>
<li>配置中英文转换</li>
<li>在about界面配置更多彩的排版</li>
<li>给代码块添加高亮</li>
</ul>
<h1 id="Step-V-博客撰写与发布"><a href="#Step-V-博客撰写与发布" class="headerlink" title="Step V 博客撰写与发布"></a>Step V 博客撰写与发布</h1><h2 id="撰写博客"><a href="#撰写博客" class="headerlink" title="撰写博客"></a>撰写博客</h2><h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><p>​	Markdown语法免去了Word文档调整排版的烦恼，但也不像LaTeX那样门槛略高。结合优质的编译器，也可以实现“所见即所得”的效果。</p>
<ul>
<li><p>官网语法教程：<a href="https://markdown.com.cn/basic-syntax/lists.html">https://markdown.com.cn/basic-syntax/lists.html</a></p>
</li>
<li><p>特殊输入：数学公式与化学方程式</p>
<p>next主题内置了mhchem，只需在主题配置文件中将对应命令改为true即可。</p>
<p>Ref：<a href="https://mhchem.github.io/MathJax-mhchem/">https://mhchem.github.io/MathJax-mhchem/</a></p>
<p>比较苦恼的是markdown语法不支持修改图片大小，只能按照原尺寸显示。</p>
</li>
</ul>
<h3 id="编译器"><a href="#编译器" class="headerlink" title="编译器"></a>编译器</h3><ol>
<li>Editor.md: 来自Github大佬Pandao的<strong>开源</strong>Markdown编译器</li>
</ol>
<p>​	Download：<a href="https://github.com/pandao/editor.md">https://github.com/pandao/editor.md</a></p>
<p>​	Ref：<a href="https://pandao.github.io/editor.md/examples/index.html">https://pandao.github.io/editor.md/examples/index.html</a></p>
<p>​	备注：需要针对hexo重新封装</p>
<ol start="2">
<li>Typora：所见即所得的Markdown编译器（<strong>89 CNY</strong>）</li>
</ol>
<p>​	Ref：<a href="https://jgwu.top/blogs/Typora-hexo%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/">https://jgwu.top/blogs/Typora-hexo%E5%8F%91%E5%B8%83%E5%8D%9A%E5%AE%A2/</a></p>
<ol start="3">
<li>VSCode</li>
</ol>
<h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><ul>
<li>素质三连：clean、generate、deploy</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>

<p>​	hexo博客本质是静态网页，每次内容更新都需将网页重新生成。<code>hexo clean</code>命令清除缓存文件；<code>hexo g</code>是<code>hexo generate</code>的缩写，重新生成新的网页；<code>hexo d</code>是<code>hexo deploy</code>的缩写，将新生成的网页部署到Github仓库中。</p>
]]></content>
      <tags>
        <tag>博客建站</tag>
        <tag>教程</tag>
      </tags>
  </entry>
</search>
